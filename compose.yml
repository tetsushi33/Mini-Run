services:
  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    environment:
      - NODE_ENV=development
    depends_on:
      - backend

  backend:
    build: ./backend
    container_name: backend
    ports:
      - "5000:5000"
    volumes:
      - ./backend:/app
    env_file:
      - backend/.env
    depends_on:
      - dynamodb
      - minio

  dynamodb:
    image: amazon/dynamodb-local
    container_name: dynamodb
    user: root
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /data
    ports:
      - "8000:8000"
    volumes:
      - dynamodb_data:/data

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin:latest
    container_name: dynamodb-admin
    environment:
      - DYNAMO_ENDPOINT=http://dynamodb:8000
    ports:
      - 8001:8001
    depends_on:
      - dynamodb

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      - MINIO_ROOT_USER=miniominio
      - MINIO_ROOT_PASSWORD=miniominio
    command: server --console-address ":9001" /data
    volumes:
      - minio_data:/data

volumes:
  dynamodb_data:
  minio_data: